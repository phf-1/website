server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 444; # Drop non-matching HTTP traffic
}

server {
    listen 80;
    listen [::]:80;
    server_name phfrohring.com www.phfrohring.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl default_server;
    listen [::]:443 ssl default_server;
    server_name phfrohring.com www.phfrohring.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/phfrohring.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/phfrohring.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Size limiting
    client_max_body_size 1M;

    # Rate limiting
    limit_req zone=one burst=10 nodelay;

    # Limit methods
    if ($request_method !~ ^(GET|POST|HEAD)$) {
        return 405;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    location / {
        proxy_pass http://__IP__:__PORT__;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}